0001   0000             ;
0002   0000             ; #### hpybrthd.asm ####
0003   0000             ; To assembly this, either use the zxasm.bat file:
0004   0000             ;
0005   0000             ; zxasm hpybrthd
0006   0000             ;
0007   0000             ; or... assemble with the following options:
0008   0000             ;
0009   0000             ; tasm -80 -b -s hpybrthd.asm hpybrthd.p
0010   0000             ;
0011   0000             ;==============================================
0012   0000             ;    ZX81 assembler 'Happy Birthday' 
0013   0000             ;==============================================
0014   0000             ;
0015   0000             ;defs
0016   0000             #include "zx81defs.asm"
0001+  0000             ;defines to make us feel more at home
0002+  0000             #define         DEFB .BYTE
0003+  0000             #define         DEFW .WORD
0004+  0000             #define         DEFM .TEXT
0005+  0000             #define         ORG  .ORG
0006+  0000             #define         EQU  .EQU
0017   0000             ;EQUs for ROM routines
0018   0000             #include "zx81rom.asm"
0001+  0000             ;ZX81 ROM routines
0002+  0000             PRINT			EQU $10
0003+  0000             PRINTAT			EQU $08F5
0004+  0000             DISPROUT		EQU $0281
0005+  0000             DISPLAY_3		EQU $0292 ;restore registers after a 'slow' display
0006+  0000             DISPLAY_5		EQU $02B5
0007+  0000             PLOT			EQU $0BB2 	; note ROM plot is 0baf - however first thing it does try to pull BC from the calculator stack
0008+  0000             							; so we'll skip past that and set BC ourselves
0009+  0000             CLS				EQU $0A2A
0010+  0000             KSCAN           EQU $02BB 
0011+  0000             FINDCHR         EQU $07BD
0012+  0000             COPY            EQU $0869
0013+  0000             FAST            EQU $0F23
0014+  0000             SLOW            EQU $0F2B
0015+  0000             SLOWORFAST		EQU $0207
0016+  0000             ;sys vars
0017+  0000             ERR_NR			EQU $40000019   0000             ;ZX81 char codes/how to survive without ASCII
0020   0000             #include "charcodes.asm"
0001+  0000             ; ZX81 Characters.
0002+  0000             __:				EQU	$00	;spacja
0003+  0000             _QT:			EQU	$0B	;"
0004+  0000             _PD:			EQU	$0C	;funt
0005+  0000             _SD:			EQU	$0D	;$
0006+  0000             _CL:			EQU	$0E	;:
0007+  0000             _QM:			EQU	$0F	;?
0008+  0000             _OP:			EQU	$10	;(
0009+  0000             _CP:			EQU	$11	;)
0010+  0000             _GT:			EQU	$12	;>
0011+  0000             _LT:			EQU	$13	;<
0012+  0000             _EQ:			EQU	$14	;=
0013+  0000             _PL:			EQU	$15	;+
0014+  0000             _MI:			EQU	$16	;-
0015+  0000             _AS:			EQU	$17	;*
0016+  0000             _SL:			EQU	$18	;/
0017+  0000             _SC:			EQU	$19	;;
0018+  0000             _CM:			EQU	$1A	;,
0019+  0000             _DT:			EQU	$1B	;.
0020+  0000             _NL:			EQU	$76	;NEWLINE
0021+  0000             
0022+  0000             _0				EQU $1C
0023+  0000             _1				EQU $1D
0024+  0000             _2				EQU $1E
0025+  0000             _3				EQU $1F
0026+  0000             _4				EQU $20
0027+  0000             _5				EQU $21
0028+  0000             _6				EQU $22
0029+  0000             _7				EQU $23
0030+  0000             _8				EQU $24
0031+  0000             _9				EQU $25
0032+  0000             _A				EQU $26
0033+  0000             _B				EQU $27
0034+  0000             _C				EQU $28
0035+  0000             _D				EQU $29
0036+  0000             _E				EQU $2A
0037+  0000             _F				EQU $2B
0038+  0000             _G				EQU $2C
0039+  0000             _H				EQU $2D
0040+  0000             _I				EQU $2E
0041+  0000             _J				EQU $2F
0042+  0000             _K				EQU $30
0043+  0000             _L				EQU $31
0044+  0000             _M				EQU $32
0045+  0000             _N				EQU $33
0046+  0000             _O				EQU $34
0047+  0000             _P				EQU $35
0048+  0000             _Q				EQU $36
0049+  0000             _R				EQU $37
0050+  0000             _S				EQU $38
0051+  0000             _T				EQU $39
0052+  0000             _U				EQU $3A
0053+  0000             _V				EQU $3B
0054+  0000             _W				EQU $3C
0055+  0000             _X				EQU $3D
0056+  0000             _Y				EQU $3E
0057+  0000             _Z				EQU $3F
0021   0000             ;system variables
0022   0000             #include "zx81sys.asm"
0001+  0000             ;system variables
0002+  0000             ;Origin of a ZX81 file is always 16393
0003+  0000             
0004+  4009                             ORG 16393
0005+  4009                             
0006+  4009             ; System variables live here
0007+  4009 00          VERSN:          DEFB 0
0008+  400A 02 00       E_PPC:          DEFW 2
0009+  400C 00 41       D_FILE:         DEFW Display
0010+  400E 01 41       DF_CC:          DEFW Display+1                  ; First character of display
0011+  4010 B5 43       VARS:           DEFW Variables
0012+  4012 00 00       DEST:           DEFW 0
0013+  4014 B6 43       E_LINE:         DEFW BasicEnd 
0014+  4016 BA 43       CH_ADD:         DEFW BasicEnd+4                 ; Simulate SAVE "X"
0015+  4018 00 00       X_PTR:          DEFW 0
0016+  401A BB 43       STKBOT:         DEFW BasicEnd+5
0017+  401C BB 43       STKEND:         DEFW BasicEnd+5                 ; Empty stack
0018+  401E 00          BREG:           DEFB 0
0019+  401F 5D 40       MEM:            DEFW MEMBOT
0020+  4021 00          UNUSED1:        DEFB 0
0021+  4022 02          DF_SZ:          DEFB 2
0022+  4023 02 00       S_TOP:          DEFW $0002                      ; Top program line number
0023+  4025 BF FD       LAST_K:         DEFW $fdbf
0024+  4027 0F          DEBOUN:         DEFB 15
0025+  4028 37          MARGIN:         DEFB 55
0026+  4029 F2 40       NXTLIN:         DEFW Line2                      ; Next line address
0027+  402B 00 00       OLDPPC:         DEFW 0
0028+  402D 00          FLAGX:          DEFB 0
0029+  402E 00 00       STRLEN:         DEFW 0
0030+  4030 8D 0C       T_ADDR:         DEFW $0c8d
0031+  4032 00 00       SEED:           DEFW 0
0032+  4034 A3 F5       FRAMES:         DEFW $f5a3
0033+  4036 00 00       COORDS:         DEFW 0
0034+  4038 BC          PR_CC:          DEFB $bc
0035+  4039 21 18       S_POSN:         DEFW $1821
0036+  403B 40          CDFLAG:         DEFB $40
0037+  403C 00 00 00 00 PRBUFF:         DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,$76 ; 32 Spaces + Newline
0037+  4040 00 00 00 00 
0037+  4044 00 00 00 00 
0037+  4048 00 00 00 00 
0037+  404C 00 00 00 00 
0037+  4050 00 00 00 00 
0037+  4054 00 00 00 00 
0037+  4058 00 00 00 00 
0037+  405C 76 
0038+  405D 00 00 00 00 MEMBOT:         DEFB 0,0,0,0,0,0,0,0,0,0,$84,$20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ; 30 zeros
0038+  4061 00 00 00 00 
0038+  4065 00 00 84 20 
0038+  4069 00 00 00 00 
0038+  406D 00 00 00 00 
0038+  4071 00 00 00 00 
0038+  4075 00 00 00 00 
0038+  4079 00 00 
0039+  407B 00 00       UNUNSED2:       DEFW 0
0040+  407D             
0041+  407D             ; End of system variables
0042+  407D             
0023   407D             
0024   407D             ;the standard REM statement that will contain our 'hex' code
0025   407D             #include "line1.asm"
0001+  407D             ;Line 1
0002+  407D             ;this is the REM statement...
0003+  407D 00 00       Line1:          DEFB $00,$00                    ; Line 1
0004+  407F 71 00                       DEFW Line1End-Line1Text         ; Line 1 length
0005+  4081 EA          Line1Text:      DEFB $ea                        ; REM             
0006+  4082             
0026   4082             
0027   4082             ;------------------------------------------------------------
0028   4082             ; code starts here and gets added to the end of the REM 
0029   4082             ;------------------------------------------------------------
0030   4082             main	
0031   4082 21 D3 40    	ld hl,happyBirthday			;load the address of the message
0032   4085 ED 5B 0C 40 	ld de,(D_FILE)				;load the base of screen memory
0033   4089 13          	inc de						;increase it by one to bypass the $76
0034   408A 01 0C 00    	ld bc,12					;ready for 12 loops
0035   408D ED B0       	ldir						;transfer HL to DE 12 times and increase both accordingly
0036   408F EB          	ex de,hl					;put HL into DE (HL was the message position)
0037   4090 06 04       	ld b,4						;prepare to loop 4 times
0038   4092 2B          	dec hl						;decrease HL (screen location) by 1
0039   4093             rightVertical
0040   4093 D5          	push de						;save the character position
0041   4094 11 0D 00    	ld de,13					;load 13 (for the next line)
0042   4097 19          	add hl,de					;add to HL	
0043   4098 D1          	pop de						;get the message position back
0044   4099 1A          	ld a,(de)					;load the character into A
0045   409A 77          	ld (hl),a					;save it to HL
0046   409B 13          	inc de						;increase the character position
0047   409C 10 F5       	djnz rightVertical			;repeat until B = 0
0048   409E 2B          	dec hl						;decrease HL (screen location) by 1 to step back from the $76 char
0049   409F 06 0B       	ld b,11						;prepare for 11 loops
0050   40A1             lastLine
0051   40A1 1A          	ld a,(de)					;load the current character into A
0052   40A2 77          	ld (hl),a					;save to the screen
0053   40A3 2B          	dec hl						;decrease the screen position (as we are going backwards)
0054   40A4 13          	inc de						;increase character position
0055   40A5 10 FA       	djnz lastLine				;repeat until B = 0
0056   40A7 06 03       	ld b,3						;get ready for the left vertical
0057   40A9 23          	inc hl						;increase the screen position by 1 as we have gone 1 too far to the left and wrapped to the line above
0058   40AA             leftVertical
0059   40AA D5          	push de						;save the character position
0060   40AB 11 0D 00    	ld de,13					;load 13 (for the next line)
0061   40AE ED 52       	sbc hl,de					;subtract it to move up a line in memory
0062   40B0 D1          	pop de						;get the character pos back
0063   40B1 1A          	ld a,(de)					;load the character
0064   40B2 77          	ld (hl),a					;save it to the screen
0065   40B3 13          	inc de						;next character
0066   40B4 10 F4       	djnz leftVertical			;repeat until B = 0 	
0067   40B6             delayCode
0068   40B6 21 34 40    	ld   hl,FRAMES         		;fetch timer                 
0069   40B9 7E              ld   a,(hl)                 ;load into A                        
0070   40BA D6 0A           sub  10                		;wait 10 full frames (0.1 of a second)
0071   40BC             delayLoop        
0072   40BC BE          	cp  (hl) 					;compare HL to 0
0073   40BD 20 FD           jr   nz,delayLoop			;if not 0 then repeat until it is	
0074   40BF             shuffleMessage
0075   40BF 3A D3 40    	ld a, (happyBirthday)		;load the first character of the message
0076   40C2 F5          	push af						;save the first character of the message
0077   40C3 21 D3 40    	ld hl, happyBirthday		;load the address of the message
0078   40C6 23          	inc hl						;increase by one to get the second char
0079   40C7 11 D3 40    	ld de, happyBirthday		;load the start of the message
0080   40CA 01 1D 00    	ld bc, 29					;number of times to loop
0081   40CD ED B0       	ldir						;load HL (char 2) into DE (char 1) and repeat
0082   40CF F1          	pop af						;get char 1 back	
0083   40D0 12          	ld (de),a					;out it at the end of the string
0084   40D1 18 AF       	jr main						;repeat
0085   40D3             
0086   40D3             happyBirthday
0087   40D3 2D 26 35 35 		DEFB	_H,_A,_P,_P,_Y,__,_B,_I,_R,_T,_H,_D,_A,_Y,__,_R,_A,_F,_F,_A,_E,_L,_E,__,_C,_E,_C,_C,_O,__
0087   40D7 3E 00 27 2E 
0087   40DB 37 39 2D 29 
0087   40DF 26 3E 00 37 
0087   40E3 26 2B 2B 26 
0087   40E7 2A 31 2A 00 
0087   40EB 28 2A 28 28 
0087   40EF 34 00 
0088   40F1             ; ===========================================================
0089   40F1             ; code ends
0090   40F1             ; ===========================================================
0091   40F1             ;end the REM line and put in the RAND USR line to call our 'hex code'
0092   40F1             #include "line2.asm"
0001+  40F1             ;this is the end of line 1 - the REM			
0002+  40F1 76          				DEFB $76                        ; Newline				
0003+  40F2             ;followed by the the RAND USR line				
0004+  40F2             Line1End       
0005+  40F2 00 0A       Line2			DEFB $00,$0a
0006+  40F4 0A 00                       DEFW Line2End-Line2Text
0007+  40F6 F9 D4       Line2Text     	DEFB $F9,$D4                    ; RAND USR
0008+  40F8 1D          				DEFB $1D        ; 16514                
0009+  40F9 7E                          DEFB $7E                        ; Number
0010+  40FA 8F 01 04 00                 DEFB $8F,$01,$04,$00,$00        ; Numeric encoding
0010+  40FE 00 
0011+  40FF 76                          DEFB $76                        ; Newline
0012+  4100             Line2End 
0093   4100             
0094   4100             ;display file defintion
0095   4100             #include "screen.asm"               
0001+  4100             ;ZX81 screens
0002+  4100             ; Display file (ZX81 screen) - low res screen
0003+  4100 76          Display        	DEFB $76     
0004+  4101 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 0
0004+  4105 00 00 00 00 
0004+  4109 00 00 00 00 
0004+  410D 76 
0005+  410E 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 1
0005+  4112 00 00 00 00 
0005+  4116 00 00 00 00 
0005+  411A 76 
0006+  411B 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 2
0006+  411F 00 00 00 00 
0006+  4123 00 00 00 00 
0006+  4127 76 
0007+  4128 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 3
0007+  412C 00 00 00 00 
0007+  4130 00 00 00 00 
0007+  4134 76 
0008+  4135 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 4
0008+  4139 00 00 00 00 
0008+  413D 00 00 00 00 
0008+  4141 76 
0009+  4142 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 5
0009+  4146 00 00 00 00 
0009+  414A 00 00 00 00 
0009+  414E 00 00 00 00 
0009+  4152 00 00 00 00 
0009+  4156 00 00 00 00 
0009+  415A 00 00 00 00 
0009+  415E 00 00 00 00 
0009+  4162 76 
0010+  4163 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 6
0010+  4167 00 00 00 00 
0010+  416B 00 00 00 00 
0010+  416F 00 00 00 00 
0010+  4173 00 00 00 00 
0010+  4177 00 00 00 00 
0010+  417B 00 00 00 00 
0010+  417F 00 00 00 00 
0010+  4183 76 
0011+  4184 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 7
0011+  4188 00 00 00 00 
0011+  418C 00 00 00 00 
0011+  4190 00 00 00 00 
0011+  4194 00 00 00 00 
0011+  4198 00 00 00 00 
0011+  419C 00 00 00 00 
0011+  41A0 00 00 00 00 
0011+  41A4 76 
0012+  41A5 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 8
0012+  41A9 00 00 00 00 
0012+  41AD 00 00 00 00 
0012+  41B1 00 00 00 00 
0012+  41B5 00 00 00 00 
0012+  41B9 00 00 00 00 
0012+  41BD 00 00 00 00 
0012+  41C1 00 00 00 00 
0012+  41C5 76 
0013+  41C6 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 9
0013+  41CA 00 00 00 00 
0013+  41CE 00 00 00 00 
0013+  41D2 00 00 00 00 
0013+  41D6 00 00 00 00 
0013+  41DA 00 00 00 00 
0013+  41DE 00 00 00 00 
0013+  41E2 00 00 00 00 
0013+  41E6 76 
0014+  41E7 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 10
0014+  41EB 00 00 00 00 
0014+  41EF 00 00 00 00 
0014+  41F3 00 00 00 00 
0014+  41F7 00 00 00 00 
0014+  41FB 00 00 00 00 
0014+  41FF 00 00 00 00 
0014+  4203 00 00 00 00 
0014+  4207 76 
0015+  4208 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 11
0015+  420C 00 00 00 00 
0015+  4210 00 00 00 00 
0015+  4214 00 00 00 00 
0015+  4218 00 00 00 00 
0015+  421C 00 00 00 00 
0015+  4220 00 00 00 00 
0015+  4224 00 00 00 00 
0015+  4228 76 
0016+  4229 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 12
0016+  422D 00 00 00 00 
0016+  4231 00 00 00 00 
0016+  4235 00 00 00 00 
0016+  4239 00 00 00 00 
0016+  423D 00 00 00 00 
0016+  4241 00 00 00 00 
0016+  4245 00 00 00 00 
0016+  4249 76 
0017+  424A 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 13
0017+  424E 00 00 00 00 
0017+  4252 00 00 00 00 
0017+  4256 00 00 00 00 
0017+  425A 00 00 00 00 
0017+  425E 00 00 00 00 
0017+  4262 00 00 00 00 
0017+  4266 00 00 00 00 
0017+  426A 76 
0018+  426B 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 14
0018+  426F 00 00 00 00 
0018+  4273 00 00 00 00 
0018+  4277 00 00 00 00 
0018+  427B 00 00 00 00 
0018+  427F 00 00 00 00 
0018+  4283 00 00 00 00 
0018+  4287 00 00 00 00 
0018+  428B 76 
0019+  428C 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 15
0019+  4290 00 00 00 00 
0019+  4294 00 00 00 00 
0019+  4298 00 00 00 00 
0019+  429C 00 00 00 00 
0019+  42A0 00 00 00 00 
0019+  42A4 00 00 00 00 
0019+  42A8 00 00 00 00 
0019+  42AC 76 
0020+  42AD 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 16
0020+  42B1 00 00 00 00 
0020+  42B5 00 00 00 00 
0020+  42B9 00 00 00 00 
0020+  42BD 00 00 00 00 
0020+  42C1 00 00 00 00 
0020+  42C5 00 00 00 00 
0020+  42C9 00 00 00 00 
0020+  42CD 76 
0021+  42CE 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 17
0021+  42D2 00 00 00 00 
0021+  42D6 00 00 00 00 
0021+  42DA 00 00 00 00 
0021+  42DE 00 00 00 00 
0021+  42E2 00 00 00 00 
0021+  42E6 00 00 00 00 
0021+  42EA 00 00 00 00 
0021+  42EE 76 
0022+  42EF 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 18
0022+  42F3 00 00 00 00 
0022+  42F7 00 00 00 00 
0022+  42FB 00 00 00 00 
0022+  42FF 00 00 00 00 
0022+  4303 00 00 00 00 
0022+  4307 00 00 00 00 
0022+  430B 00 00 00 00 
0022+  430F 76 
0023+  4310 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 19
0023+  4314 00 00 00 00 
0023+  4318 00 00 00 00 
0023+  431C 00 00 00 00 
0023+  4320 00 00 00 00 
0023+  4324 00 00 00 00 
0023+  4328 00 00 00 00 
0023+  432C 00 00 00 00 
0023+  4330 76 
0024+  4331 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 20
0024+  4335 00 00 00 00 
0024+  4339 00 00 00 00 
0024+  433D 00 00 00 00 
0024+  4341 00 00 00 00 
0024+  4345 00 00 00 00 
0024+  4349 00 00 00 00 
0024+  434D 00 00 00 00 
0024+  4351 76 
0025+  4352 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 21
0025+  4356 00 00 00 00 
0025+  435A 00 00 00 00 
0025+  435E 00 00 00 00 
0025+  4362 00 00 00 00 
0025+  4366 00 00 00 00 
0025+  436A 00 00 00 00 
0025+  436E 00 00 00 00 
0025+  4372 76 
0026+  4373 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 22
0026+  4377 00 00 00 00 
0026+  437B 00 00 00 00 
0026+  437F 00 00 00 00 
0026+  4383 00 00 00 00 
0026+  4387 00 00 00 00 
0026+  438B 00 00 00 00 
0026+  438F 00 00 00 00 
0026+  4393 76 
0027+  4394 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 23
0027+  4398 00 00 00 00 
0027+  439C 00 00 00 00 
0027+  43A0 00 00 00 00 
0027+  43A4 00 00 00 00 
0027+  43A8 00 00 00 00 
0027+  43AC 00 00 00 00 
0027+  43B0 00 00 00 00 
0027+  43B4 76 
0028+  43B5             
0096   43B5             						
0097   43B5             ;close out the basic program
0098   43B5             #include "endbasic.asm"
0001+  43B5             ; close out the BASIC program structure
0002+  43B5             ; BASIC Variables area
0003+  43B5             Variables:      
0004+  43B5 80          VariablesEnd:   DEFB $80
0005+  43B6             BasicEnd:                              
0006+  43B6             
0007+  43B6             
0008+  43B6             #END
0099   43B6             			
0100   43B6             			tasm: Number of errors = 0
